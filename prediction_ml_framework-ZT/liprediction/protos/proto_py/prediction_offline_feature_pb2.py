# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: prediction_offline_feature.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n prediction_offline_feature.proto\x12-artemis.prediction.prediction_offline_feature\"#\n\x05Vec2d\x12\x0c\n\x01x\x18\x01 \x01(\x01:\x01\x30\x12\x0c\n\x01y\x18\x02 \x01(\x01:\x01\x30\"4\n\x06Tensor\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x03(\x02\x12\r\n\x05shape\x18\x03 \x03(\x05\"\xed\x01\n\x0cPolylineInfo\x12\x13\n\x0bpolyline_id\x18\x01 \x01(\t\x12V\n\x04type\x18\x02 \x01(\x0e\x32H.artemis.prediction.prediction_offline_feature.PolylineInfo.PolylineType\"p\n\x0cPolylineType\x12\t\n\x05UNSET\x10\x00\x12\x0c\n\x08Obstacle\x10\x01\x12\x08\n\x04Lane\x10\x02\x12\x10\n\x0cLaneBoundary\x10\x03\x12\x10\n\x0cRoadBoundary\x10\x04\x12\x0b\n\x07Polygon\x10\x05\x12\x0c\n\x08Stopline\x10\x06\"\xb1\x01\n\x08VecPoint\x12\x44\n\x06points\x18\x01 \x03(\x0b\x32\x34.artemis.prediction.prediction_offline_feature.Vec2d\x12_\n\rpolyline_type\x18\x02 \x01(\x0e\x32H.artemis.prediction.prediction_offline_feature.PolylineInfo.PolylineType\",\n\nLaneAction\x12\x0f\n\x07seq_num\x18\x01 \x01(\x05\x12\r\n\x05state\x18\x02 \x01(\x05\"m\n\x0eLaneActionList\x12\x0f\n\x07lane_id\x18\x01 \x01(\t\x12J\n\x07\x61\x63tions\x18\x02 \x03(\x0b\x32\x39.artemis.prediction.prediction_offline_feature.LaneAction\"\xc2\x01\n\nLaneVector\x12\x44\n\x03vec\x18\x01 \x01(\x0b\x32\x37.artemis.prediction.prediction_offline_feature.VecPoint\x12\x0f\n\x07heading\x18\x02 \x01(\x02\x12\x13\n\x0bspeed_limit\x18\x03 \x01(\x02\x12\x0e\n\x06\x61\x63tion\x18\x04 \x01(\r\x12\x12\n\nis_virtual\x18\x05 \x01(\x08\x12\x11\n\tstop_sign\x18\x06 \x01(\r\x12\x11\n\tlane_type\x18\x07 \x01(\r\"\x9c\x01\n\x12LaneBoundaryVector\x12\x44\n\x03vec\x18\x01 \x01(\x0b\x32\x37.artemis.prediction.prediction_offline_feature.VecPoint\x12\x0c\n\x04type\x18\x02 \x01(\r\x12\x0f\n\x07heading\x18\x03 \x01(\x02\x12\x0e\n\x06\x61\x63tion\x18\x04 \x01(\r\x12\x11\n\tstop_sign\x18\x05 \x01(\r\"\x89\x01\n\x12RoadBoundaryVector\x12\x44\n\x03vec\x18\x01 \x01(\x0b\x32\x37.artemis.prediction.prediction_offline_feature.VecPoint\x12\x11\n\troad_type\x18\x02 \x01(\r\x12\x1a\n\x12\x62oundary_edge_type\x18\x03 \x01(\r\"c\n\rPolygonVector\x12\x44\n\x03vec\x18\x01 \x01(\x0b\x32\x37.artemis.prediction.prediction_offline_feature.VecPoint\x12\x0c\n\x04type\x18\x02 \x01(\x05\"e\n\x0eStopLineVector\x12\x44\n\x03vec\x18\x01 \x01(\x0b\x32\x37.artemis.prediction.prediction_offline_feature.VecPoint\x12\r\n\x05\x63olor\x18\x02 \x01(\r\"\xbc\x03\n\x0eObstacleVector\x12\x0f\n\x07seq_num\x18\x01 \x01(\x05\x12\x11\n\ttimestamp\x18\x02 \x01(\x02\x12\x44\n\x03vec\x18\x03 \x01(\x0b\x32\x37.artemis.prediction.prediction_offline_feature.VecPoint\x12\x46\n\x08velocity\x18\x04 \x01(\x0b\x32\x34.artemis.prediction.prediction_offline_feature.Vec2d\x12\x41\n\x03\x61\x63\x63\x18\x05 \x01(\x0b\x32\x34.artemis.prediction.prediction_offline_feature.Vec2d\x12\x13\n\x0b\x64ist_to_adc\x18\x06 \x01(\x02\x12\x0f\n\x07heading\x18\x07 \x01(\x02\x12\x0e\n\x06length\x18\x08 \x01(\x02\x12\r\n\x05width\x18\t \x01(\x02\x12\x0e\n\x06height\x18\n \x01(\x02\x12\x0c\n\x04type\x18\x0b \x01(\r\x12\x11\n\tadc_theta\x18\x0c \x01(\x02\x12\x1c\n\x14is_interpolation_vec\x18\r \x01(\x08\x12\r\n\x05speed\x18\x0e \x01(\x02\x12\x12\n\nscalar_acc\x18\x0f \x01(\x02\"\xa6\x01\n\x07Segment\x12\x12\n\nsegment_id\x18\x01 \x01(\t\x12\x13\n\x0bpredecessor\x18\x02 \x03(\t\x12\x11\n\tsuccessor\x18\x03 \x03(\t\x12\x15\n\rleft_neighbor\x18\x04 \x03(\t\x12\x16\n\x0eright_neighbor\x18\x05 \x03(\t\x12\x18\n\x10vector_start_idx\x18\x06 \x01(\x05\x12\x16\n\x0evector_end_idx\x18\x07 \x01(\x05\"\xa5\x02\n\x0cLanePolyLine\x12\n\n\x02id\x18\x01 \x01(\t\x12N\n\x0blane_vector\x18\x02 \x03(\x0b\x32\x39.artemis.prediction.prediction_offline_feature.LaneVector\x12L\n\x0csegment_info\x18\x03 \x03(\x0b\x32\x36.artemis.prediction.prediction_offline_feature.Segment\x12\x11\n\tsuccessor\x18\x04 \x03(\t\x12\x13\n\x0bpredecessor\x18\x05 \x03(\t\x12\x15\n\rleft_neighbor\x18\x06 \x03(\t\x12\x16\n\x0eright_neighbor\x18\x07 \x03(\t\x12\x14\n\x0ctotal_length\x18\x08 \x01(\x01\"\xce\x01\n\x14LaneBoundaryPolyLine\x12\n\n\x02id\x18\x01 \x01(\t\x12\\\n\x11lane_boundary_vec\x18\x02 \x03(\x0b\x32\x41.artemis.prediction.prediction_offline_feature.LaneBoundaryVector\x12L\n\x0csegment_info\x18\x03 \x03(\x0b\x32\x36.artemis.prediction.prediction_offline_feature.Segment\"\xce\x01\n\x14RoadBoundaryPolyLine\x12\n\n\x02id\x18\x01 \x01(\t\x12\\\n\x11road_boundary_vec\x18\x02 \x03(\x0b\x32\x41.artemis.prediction.prediction_offline_feature.RoadBoundaryVector\x12L\n\x0csegment_info\x18\x03 \x03(\x0b\x32\x36.artemis.prediction.prediction_offline_feature.Segment\"p\n\x0fPolygonPolyLine\x12\n\n\x02id\x18\x01 \x01(\t\x12Q\n\x0bpolygon_vec\x18\x02 \x03(\x0b\x32<.artemis.prediction.prediction_offline_feature.PolygonVector\"s\n\x10StopLinePolyLine\x12\n\n\x02id\x18\x01 \x01(\t\x12S\n\x0cstopline_vec\x18\x02 \x03(\x0b\x32=.artemis.prediction.prediction_offline_feature.StopLineVector\"\xfd\x03\n\x11StaticMapPolyLine\x12\x44\n\x06origin\x18\x01 \x01(\x0b\x32\x34.artemis.prediction.prediction_offline_feature.Vec2d\x12\x45\n\x07\x61\x64\x63_pos\x18\x02 \x01(\x0b\x32\x34.artemis.prediction.prediction_offline_feature.Vec2d\x12J\n\x05lanes\x18\x04 \x03(\x0b\x32;.artemis.prediction.prediction_offline_feature.LanePolyLine\x12[\n\x0elane_boundarys\x18\x05 \x03(\x0b\x32\x43.artemis.prediction.prediction_offline_feature.LaneBoundaryPolyLine\x12[\n\x0eroad_boundarys\x18\x06 \x03(\x0b\x32\x43.artemis.prediction.prediction_offline_feature.RoadBoundaryPolyLine\x12U\n\rmap_polylines\x18\x07 \x03(\x0b\x32>.artemis.prediction.prediction_offline_feature.PolygonPolyLine\"\xbe\x01\n\x12\x44ynamicMapPolyLine\x12R\n\tstoplines\x18\x01 \x03(\x0b\x32?.artemis.prediction.prediction_offline_feature.StopLinePolyLine\x12T\n\rlanes_actions\x18\x02 \x03(\x0b\x32=.artemis.prediction.prediction_offline_feature.LaneActionList\"\x8d\x03\n\x07\x46\x65\x61ture\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x0f\n\x07seq_num\x18\x02 \x01(\x05\x12\x11\n\ttimestamp\x18\x03 \x01(\x01\x12\x46\n\x08position\x18\x04 \x01(\x0b\x32\x34.artemis.prediction.prediction_offline_feature.Vec2d\x12\x0f\n\x07heading\x18\x05 \x01(\x01\x12R\n\rpolyline_info\x18\x06 \x03(\x0b\x32;.artemis.prediction.prediction_offline_feature.PolylineInfo\x12N\n\x07obs_vec\x18\x07 \x03(\x0b\x32=.artemis.prediction.prediction_offline_feature.ObstacleVector\x12U\n\x0eobs_future_vec\x18\x08 \x03(\x0b\x32=.artemis.prediction.prediction_offline_feature.ObstacleVector\"\xc1\x03\n\x0c\x46rameFeature\x12\x10\n\x08scene_id\x18\x01 \x01(\t\x12\x0f\n\x07seq_num\x18\x02 \x01(\x05\x12Q\n\x11obstacle_features\x18\x03 \x03(\x0b\x32\x36.artemis.prediction.prediction_offline_feature.Feature\x12V\n\x0cmap_polyline\x18\x04 \x01(\x0b\x32@.artemis.prediction.prediction_offline_feature.StaticMapPolyLine\x12[\n\x10\x64ynamic_polyline\x18\x05 \x01(\x0b\x32\x41.artemis.prediction.prediction_offline_feature.DynamicMapPolyLine\x12H\n\nmap_points\x18\x06 \x03(\x0b\x32\x34.artemis.prediction.prediction_offline_feature.Vec2d\x12\x10\n\x08\x61gent_id\x18\x07 \x01(\x05\x12\x16\n\x0einteraction_id\x18\x08 \x03(\x05\x12\x12\n\npredict_id\x18\t \x03(\x05\"$\n\x08Metadata\x12\x18\n\x10sample_name_list\x18\x01 \x03(\t')



_VEC2D = DESCRIPTOR.message_types_by_name['Vec2d']
_TENSOR = DESCRIPTOR.message_types_by_name['Tensor']
_POLYLINEINFO = DESCRIPTOR.message_types_by_name['PolylineInfo']
_VECPOINT = DESCRIPTOR.message_types_by_name['VecPoint']
_LANEACTION = DESCRIPTOR.message_types_by_name['LaneAction']
_LANEACTIONLIST = DESCRIPTOR.message_types_by_name['LaneActionList']
_LANEVECTOR = DESCRIPTOR.message_types_by_name['LaneVector']
_LANEBOUNDARYVECTOR = DESCRIPTOR.message_types_by_name['LaneBoundaryVector']
_ROADBOUNDARYVECTOR = DESCRIPTOR.message_types_by_name['RoadBoundaryVector']
_POLYGONVECTOR = DESCRIPTOR.message_types_by_name['PolygonVector']
_STOPLINEVECTOR = DESCRIPTOR.message_types_by_name['StopLineVector']
_OBSTACLEVECTOR = DESCRIPTOR.message_types_by_name['ObstacleVector']
_SEGMENT = DESCRIPTOR.message_types_by_name['Segment']
_LANEPOLYLINE = DESCRIPTOR.message_types_by_name['LanePolyLine']
_LANEBOUNDARYPOLYLINE = DESCRIPTOR.message_types_by_name['LaneBoundaryPolyLine']
_ROADBOUNDARYPOLYLINE = DESCRIPTOR.message_types_by_name['RoadBoundaryPolyLine']
_POLYGONPOLYLINE = DESCRIPTOR.message_types_by_name['PolygonPolyLine']
_STOPLINEPOLYLINE = DESCRIPTOR.message_types_by_name['StopLinePolyLine']
_STATICMAPPOLYLINE = DESCRIPTOR.message_types_by_name['StaticMapPolyLine']
_DYNAMICMAPPOLYLINE = DESCRIPTOR.message_types_by_name['DynamicMapPolyLine']
_FEATURE = DESCRIPTOR.message_types_by_name['Feature']
_FRAMEFEATURE = DESCRIPTOR.message_types_by_name['FrameFeature']
_METADATA = DESCRIPTOR.message_types_by_name['Metadata']
_POLYLINEINFO_POLYLINETYPE = _POLYLINEINFO.enum_types_by_name['PolylineType']
Vec2d = _reflection.GeneratedProtocolMessageType('Vec2d', (_message.Message,), {
  'DESCRIPTOR' : _VEC2D,
  '__module__' : 'prediction_offline_feature_pb2'
  # @@protoc_insertion_point(class_scope:artemis.prediction.prediction_offline_feature.Vec2d)
  })
_sym_db.RegisterMessage(Vec2d)

Tensor = _reflection.GeneratedProtocolMessageType('Tensor', (_message.Message,), {
  'DESCRIPTOR' : _TENSOR,
  '__module__' : 'prediction_offline_feature_pb2'
  # @@protoc_insertion_point(class_scope:artemis.prediction.prediction_offline_feature.Tensor)
  })
_sym_db.RegisterMessage(Tensor)

PolylineInfo = _reflection.GeneratedProtocolMessageType('PolylineInfo', (_message.Message,), {
  'DESCRIPTOR' : _POLYLINEINFO,
  '__module__' : 'prediction_offline_feature_pb2'
  # @@protoc_insertion_point(class_scope:artemis.prediction.prediction_offline_feature.PolylineInfo)
  })
_sym_db.RegisterMessage(PolylineInfo)

VecPoint = _reflection.GeneratedProtocolMessageType('VecPoint', (_message.Message,), {
  'DESCRIPTOR' : _VECPOINT,
  '__module__' : 'prediction_offline_feature_pb2'
  # @@protoc_insertion_point(class_scope:artemis.prediction.prediction_offline_feature.VecPoint)
  })
_sym_db.RegisterMessage(VecPoint)

LaneAction = _reflection.GeneratedProtocolMessageType('LaneAction', (_message.Message,), {
  'DESCRIPTOR' : _LANEACTION,
  '__module__' : 'prediction_offline_feature_pb2'
  # @@protoc_insertion_point(class_scope:artemis.prediction.prediction_offline_feature.LaneAction)
  })
_sym_db.RegisterMessage(LaneAction)

LaneActionList = _reflection.GeneratedProtocolMessageType('LaneActionList', (_message.Message,), {
  'DESCRIPTOR' : _LANEACTIONLIST,
  '__module__' : 'prediction_offline_feature_pb2'
  # @@protoc_insertion_point(class_scope:artemis.prediction.prediction_offline_feature.LaneActionList)
  })
_sym_db.RegisterMessage(LaneActionList)

LaneVector = _reflection.GeneratedProtocolMessageType('LaneVector', (_message.Message,), {
  'DESCRIPTOR' : _LANEVECTOR,
  '__module__' : 'prediction_offline_feature_pb2'
  # @@protoc_insertion_point(class_scope:artemis.prediction.prediction_offline_feature.LaneVector)
  })
_sym_db.RegisterMessage(LaneVector)

LaneBoundaryVector = _reflection.GeneratedProtocolMessageType('LaneBoundaryVector', (_message.Message,), {
  'DESCRIPTOR' : _LANEBOUNDARYVECTOR,
  '__module__' : 'prediction_offline_feature_pb2'
  # @@protoc_insertion_point(class_scope:artemis.prediction.prediction_offline_feature.LaneBoundaryVector)
  })
_sym_db.RegisterMessage(LaneBoundaryVector)

RoadBoundaryVector = _reflection.GeneratedProtocolMessageType('RoadBoundaryVector', (_message.Message,), {
  'DESCRIPTOR' : _ROADBOUNDARYVECTOR,
  '__module__' : 'prediction_offline_feature_pb2'
  # @@protoc_insertion_point(class_scope:artemis.prediction.prediction_offline_feature.RoadBoundaryVector)
  })
_sym_db.RegisterMessage(RoadBoundaryVector)

PolygonVector = _reflection.GeneratedProtocolMessageType('PolygonVector', (_message.Message,), {
  'DESCRIPTOR' : _POLYGONVECTOR,
  '__module__' : 'prediction_offline_feature_pb2'
  # @@protoc_insertion_point(class_scope:artemis.prediction.prediction_offline_feature.PolygonVector)
  })
_sym_db.RegisterMessage(PolygonVector)

StopLineVector = _reflection.GeneratedProtocolMessageType('StopLineVector', (_message.Message,), {
  'DESCRIPTOR' : _STOPLINEVECTOR,
  '__module__' : 'prediction_offline_feature_pb2'
  # @@protoc_insertion_point(class_scope:artemis.prediction.prediction_offline_feature.StopLineVector)
  })
_sym_db.RegisterMessage(StopLineVector)

ObstacleVector = _reflection.GeneratedProtocolMessageType('ObstacleVector', (_message.Message,), {
  'DESCRIPTOR' : _OBSTACLEVECTOR,
  '__module__' : 'prediction_offline_feature_pb2'
  # @@protoc_insertion_point(class_scope:artemis.prediction.prediction_offline_feature.ObstacleVector)
  })
_sym_db.RegisterMessage(ObstacleVector)

Segment = _reflection.GeneratedProtocolMessageType('Segment', (_message.Message,), {
  'DESCRIPTOR' : _SEGMENT,
  '__module__' : 'prediction_offline_feature_pb2'
  # @@protoc_insertion_point(class_scope:artemis.prediction.prediction_offline_feature.Segment)
  })
_sym_db.RegisterMessage(Segment)

LanePolyLine = _reflection.GeneratedProtocolMessageType('LanePolyLine', (_message.Message,), {
  'DESCRIPTOR' : _LANEPOLYLINE,
  '__module__' : 'prediction_offline_feature_pb2'
  # @@protoc_insertion_point(class_scope:artemis.prediction.prediction_offline_feature.LanePolyLine)
  })
_sym_db.RegisterMessage(LanePolyLine)

LaneBoundaryPolyLine = _reflection.GeneratedProtocolMessageType('LaneBoundaryPolyLine', (_message.Message,), {
  'DESCRIPTOR' : _LANEBOUNDARYPOLYLINE,
  '__module__' : 'prediction_offline_feature_pb2'
  # @@protoc_insertion_point(class_scope:artemis.prediction.prediction_offline_feature.LaneBoundaryPolyLine)
  })
_sym_db.RegisterMessage(LaneBoundaryPolyLine)

RoadBoundaryPolyLine = _reflection.GeneratedProtocolMessageType('RoadBoundaryPolyLine', (_message.Message,), {
  'DESCRIPTOR' : _ROADBOUNDARYPOLYLINE,
  '__module__' : 'prediction_offline_feature_pb2'
  # @@protoc_insertion_point(class_scope:artemis.prediction.prediction_offline_feature.RoadBoundaryPolyLine)
  })
_sym_db.RegisterMessage(RoadBoundaryPolyLine)

PolygonPolyLine = _reflection.GeneratedProtocolMessageType('PolygonPolyLine', (_message.Message,), {
  'DESCRIPTOR' : _POLYGONPOLYLINE,
  '__module__' : 'prediction_offline_feature_pb2'
  # @@protoc_insertion_point(class_scope:artemis.prediction.prediction_offline_feature.PolygonPolyLine)
  })
_sym_db.RegisterMessage(PolygonPolyLine)

StopLinePolyLine = _reflection.GeneratedProtocolMessageType('StopLinePolyLine', (_message.Message,), {
  'DESCRIPTOR' : _STOPLINEPOLYLINE,
  '__module__' : 'prediction_offline_feature_pb2'
  # @@protoc_insertion_point(class_scope:artemis.prediction.prediction_offline_feature.StopLinePolyLine)
  })
_sym_db.RegisterMessage(StopLinePolyLine)

StaticMapPolyLine = _reflection.GeneratedProtocolMessageType('StaticMapPolyLine', (_message.Message,), {
  'DESCRIPTOR' : _STATICMAPPOLYLINE,
  '__module__' : 'prediction_offline_feature_pb2'
  # @@protoc_insertion_point(class_scope:artemis.prediction.prediction_offline_feature.StaticMapPolyLine)
  })
_sym_db.RegisterMessage(StaticMapPolyLine)

DynamicMapPolyLine = _reflection.GeneratedProtocolMessageType('DynamicMapPolyLine', (_message.Message,), {
  'DESCRIPTOR' : _DYNAMICMAPPOLYLINE,
  '__module__' : 'prediction_offline_feature_pb2'
  # @@protoc_insertion_point(class_scope:artemis.prediction.prediction_offline_feature.DynamicMapPolyLine)
  })
_sym_db.RegisterMessage(DynamicMapPolyLine)

Feature = _reflection.GeneratedProtocolMessageType('Feature', (_message.Message,), {
  'DESCRIPTOR' : _FEATURE,
  '__module__' : 'prediction_offline_feature_pb2'
  # @@protoc_insertion_point(class_scope:artemis.prediction.prediction_offline_feature.Feature)
  })
_sym_db.RegisterMessage(Feature)

FrameFeature = _reflection.GeneratedProtocolMessageType('FrameFeature', (_message.Message,), {
  'DESCRIPTOR' : _FRAMEFEATURE,
  '__module__' : 'prediction_offline_feature_pb2'
  # @@protoc_insertion_point(class_scope:artemis.prediction.prediction_offline_feature.FrameFeature)
  })
_sym_db.RegisterMessage(FrameFeature)

Metadata = _reflection.GeneratedProtocolMessageType('Metadata', (_message.Message,), {
  'DESCRIPTOR' : _METADATA,
  '__module__' : 'prediction_offline_feature_pb2'
  # @@protoc_insertion_point(class_scope:artemis.prediction.prediction_offline_feature.Metadata)
  })
_sym_db.RegisterMessage(Metadata)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _VEC2D._serialized_start=83
  _VEC2D._serialized_end=118
  _TENSOR._serialized_start=120
  _TENSOR._serialized_end=172
  _POLYLINEINFO._serialized_start=175
  _POLYLINEINFO._serialized_end=412
  _POLYLINEINFO_POLYLINETYPE._serialized_start=300
  _POLYLINEINFO_POLYLINETYPE._serialized_end=412
  _VECPOINT._serialized_start=415
  _VECPOINT._serialized_end=592
  _LANEACTION._serialized_start=594
  _LANEACTION._serialized_end=638
  _LANEACTIONLIST._serialized_start=640
  _LANEACTIONLIST._serialized_end=749
  _LANEVECTOR._serialized_start=752
  _LANEVECTOR._serialized_end=946
  _LANEBOUNDARYVECTOR._serialized_start=949
  _LANEBOUNDARYVECTOR._serialized_end=1105
  _ROADBOUNDARYVECTOR._serialized_start=1108
  _ROADBOUNDARYVECTOR._serialized_end=1245
  _POLYGONVECTOR._serialized_start=1247
  _POLYGONVECTOR._serialized_end=1346
  _STOPLINEVECTOR._serialized_start=1348
  _STOPLINEVECTOR._serialized_end=1449
  _OBSTACLEVECTOR._serialized_start=1452
  _OBSTACLEVECTOR._serialized_end=1896
  _SEGMENT._serialized_start=1899
  _SEGMENT._serialized_end=2065
  _LANEPOLYLINE._serialized_start=2068
  _LANEPOLYLINE._serialized_end=2361
  _LANEBOUNDARYPOLYLINE._serialized_start=2364
  _LANEBOUNDARYPOLYLINE._serialized_end=2570
  _ROADBOUNDARYPOLYLINE._serialized_start=2573
  _ROADBOUNDARYPOLYLINE._serialized_end=2779
  _POLYGONPOLYLINE._serialized_start=2781
  _POLYGONPOLYLINE._serialized_end=2893
  _STOPLINEPOLYLINE._serialized_start=2895
  _STOPLINEPOLYLINE._serialized_end=3010
  _STATICMAPPOLYLINE._serialized_start=3013
  _STATICMAPPOLYLINE._serialized_end=3522
  _DYNAMICMAPPOLYLINE._serialized_start=3525
  _DYNAMICMAPPOLYLINE._serialized_end=3715
  _FEATURE._serialized_start=3718
  _FEATURE._serialized_end=4115
  _FRAMEFEATURE._serialized_start=4118
  _FRAMEFEATURE._serialized_end=4567
  _METADATA._serialized_start=4569
  _METADATA._serialized_end=4605
# @@protoc_insertion_point(module_scope)
